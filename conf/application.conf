# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
application.secret="<15=hx_ywxbo>:3kHXK>_rrEfu;i7@Q@/2B3q^4573JQ8kp[1o[BJ4@?c2:d3B>N"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG


# mail: gmail, smtp
sample.mail = "gmail"

# cache: memory, redis
sample.cache = "memory"

# cache: local, s3
sample.file.impl = "s3"
sample.file.localDir = "tmp/"
sample.file.s3Bucket = "uryyyyyyy-sandbox"
sample.file.s3User = "uryyyyyyy"

# model1: mysql, dynamo
sample.model1.read = "mysql"
sample.model1.write = "mysql"
sample.model1.dynamoUser = "uryyyyyyy"

db.h2.driver=org.h2.Driver
db.h2.url="jdbc:h2:mem:play;MODE=MYSQL"
db.h2.user=sa
db.h2.password=""
#ebean.model1="daos.model1.utils.entity.*, daos.model1.utils.*"